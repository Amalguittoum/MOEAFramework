<?xml version="1.0"?>
<project name="MOEA Framework" basedir=".">

	<property file="META-INF/build.properties" />
	<property environment="env" />

	<path id="classpath">
		<fileset dir="lib" includes="*.jar" />
	</path>

	<path id="requiredfiles">
		<fileset file="README" />
		<fileset file="LICENSE" />
		<fileset file="NEWS" />
		<fileset file="HELP" />
	</path>

	<target name="build-javadoc">
		<javadoc sourcepath="src" destdir="javadoc" notree="true"
				noindex="true" nohelp="true"
				overview="src/overview.html"
				windowtitle="MOEA Framework ${version} API">
			<header><![CDATA[${javadoc.title}]]></header>
			<doctitle><![CDATA[${javadoc.title}]]></doctitle>
			<footer><![CDATA[${javadoc.title}]]></footer>
			<bottom><![CDATA[${javadoc.bottom}]]></bottom>
			<classpath>
				<path refid="classpath" />
			</classpath>
			<link href="http://download.oracle.com/javase/6/docs/api/" />
		</javadoc>
	</target>

	<target name="build-binary">
		<tstamp />

		<delete dir="build" />
		<mkdir dir="build" />

		<javac destdir="build" srcdir="src" debug="${java.debug}"
				excludes="**/package-info.java"
				includeantruntime="false">
			<classpath refid="classpath" />
		</javac>

		<copy todir="build/META-INF">
			<fileset dir="META-INF" excludes="ZHANG-LICENSE" />
			<path refid="requiredfiles" />
		</copy>

		<replace file="build/META-INF/README">
			<replacefilter token="%VERSION%" value="${version}" />
			<replacefilter token="%DATE%" value="${TODAY}" />
		</replace>
		
		<property name="svn.version" value="Undefined" />

		<exec executable="svnversion" outputproperty="svn.version"
				errorproperty="svn.error" failifexecutionfails="false"/>
		
		<manifest file="build/META-INF/MANIFEST.MF">
			<section name="org/moeaframework/">
				<attribute name="Specification-Title" value="MOEA Framework" />
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Specification-Vendor" value="http://www.moeaframework.org" />
				<attribute name="Implementation-Title" value="org.moeaframework" />
				<attribute name="Implementation-Version" value="${svn.version}" />
				<attribute name="Implementation-Vendor" value="http://www.moeaframework.org" />
			</section>
		</manifest>

		<copy todir="build">
			<fileset excludes="**/*.java,overview.html" dir="src" />
		</copy>

		<jar basedir="build" manifest="build/META-INF/MANIFEST.MF"
				jarfile="dist/${shortname}-${version}.jar" />
	</target>

	<target name="package-binary" 
			depends="build-binary, build-javadoc"
			description="Creates the binary distribution file">
		<property name="base" value="build/${shortname}-${version}" />

		<delete dir="build" />
		<mkdir dir="${base}" />
		<mkdir dir="${base}/lib" />
		<mkdir dir="${base}/pf" />
		<mkdir dir="${base}/licenses" />

		<copy todir="${base}">
			<path refid="requiredfiles" />
			<fileset file="global.properties" />
			<fileset file="auxiliary/windows/launch-diagnostic-tool.bat" />
		</copy>

		<replace file="${base}/README">
			<replacefilter token="%VERSION%" value="${version}" />
			<replacefilter token="%DATE%" value="${TODAY}" />
		</replace>

		<copy todir="${base}/licenses">
			<fileset dir="META-INF" includes="*-LICENSE" 
					excludes="ZHANG-LICENSE" />
		</copy>

		<copy todir="${base}/lib">
			<fileset file="dist/${shortname}-${version}.jar" />
			<fileset dir="lib" excludes="junit-*.jar" />
		</copy>

		<copy todir="${base}/pf">
			<fileset dir="pf" excludes="referenceHypervolume" />
		</copy>

		<copy todir="${base}/javadoc">
			<fileset dir="javadoc" />
		</copy>

		<tar destfile="dist/${shortname}-${version}.tar.gz" 
				basedir="build" compression="gzip" />
	</target>

	<target name="package-source" 
			description="Creates the source code distribution file">
		<property name="base" value="build/${shortname}-${version}" />

		<delete dir="build" />
		<mkdir dir="${base}" />

		<copy todir="${base}">
			<fileset dir=".">
				<include name="auxiliary/**" />
				<exclude name="auxiliary/c/*.exe" />
				<exclude name="auxiliary/c/*.o" />
				<exclude name="auxiliary/c/*.a" />
				<include name="examples/**" />
				<include name="lib/**" />
				<exclude name="lib/junit-*.jar" />
				<include name="manual/**" />
				<include name="META-INF/**" />
				<include name="pf/**" />
				<include name="src/**" />
				<include name="test/**" />
				<include name="website/**" />
				<include name="global.properties" />
				<include name="build.xml" />
				<include name="test.xml" />
				<include name="TODO" />
			</fileset>
			<path refid="requiredfiles" />
		</copy>
		
		<copy todir="${base}">
			<fileset dir="auxiliary/eclipse" includes=".*" />
		</copy>
		
		<replace file="${base}/.project">
			<replacefilter token="%VERSION%" value="${version}" />
		</replace>

		<tar destfile="dist/${shortname}-${version}-Source.tar.gz" 
				basedir="build" compression="gzip" />
	</target>

	<target name="package-website" depends="build-javadoc"
			description="Creates the website">
		<delete dir="build" />
		<mkdir dir="build" />

		<tstamp>
			<format pattern="MMM dd, yyyy" property="today" />
			<format pattern="yyyy-MM-dd" property="lastmod" />
		</tstamp>

		<copy todir="build">
			<fileset dir="website" excludes="*.partial,xslt/**" />
		</copy>

		<copy todir="build/javadoc">
			<fileset dir="javadoc" />
		</copy>

		<loadfile property="website.tracker" srcFile="website/tracker.partial" />

		<xslt basedir="website/xslt" destdir="build" 
				style="website/xslt/stylesheet.xsl" 
				includes="*.xml" filenameparameter="filename">
			<param name="version" expression="${version}" />
			<param name="today" expression="${today}" />
			<param name="tracker" expression="${website.tracker}" />
		</xslt>

		<replace dir="build" includes="**/*.html">
			<replacefilter token="%VERSION%" value="${version}" />
			<replacefilter value="${website.tracker}">
				<replacetoken><![CDATA[<!-- %TRACKER% -->]]></replacetoken>
			</replacefilter>
		</replace>

		<replace file="build/sitemap.xml">
			<replacefilter token="%LASTMOD%" value="${lastmod}" />
		</replace>

		<copy todir="build">
			<fileset dir="examples" includes="*.java" />
		</copy>
		
		<copy todir="build">
			<fileset file="auxiliary/c/dtlz2.c" />
		</copy>
	</target>

	<!-- Run keytool -genkeypair -alias moeaframework to generate the key store -->
	<target name="package-jnlp" 
			depends="package-executable"
			description="Creates the JNLP Web Start distribution">
		<property name="base" value="build/${shortname}-${version}" />

		<delete dir="build" />
		<mkdir dir="${base}" />

		<copy todir="${base}">
			<fileset dir="auxiliary/jnlp" />
		</copy>

		<replace dir="${base}" includes="DiagnosticTool.jnlp">
			<replacefilter token="%VERSION%" value="${version}" />
			<replacefilter token="%DATE%" value="${TODAY}" />
		</replace>

		<copy todir="${base}">
			<fileset file="dist/${shortname}-${version}-Executable.jar" />
		</copy>

		<signjar alias="moeaframework" storepass="secret">
			<path>
				<fileset dir="${base}" includes="*.jar" />
			</path>
		</signjar>
	</target>

	<target name="package-executable" depends="build-binary" description="Creates the executable JAR file">
		<delete dir="build" />
		<mkdir dir="build" />
		
		<unjar dest="build" src="lib/commons-cli-1.2.jar" />
		<move file="build/META-INF/NOTICE.txt" tofile="build/META-INF/COMMONS-CLI-NOTICE.txt" />
		
		<unjar dest="build" src="lib/commons-codec-1.5.jar" />
		<move file="build/META-INF/NOTICE.txt" tofile="build/META-INF/COMMONS-CODEC-NOTICE.txt" />
		
		<unjar dest="build" src="lib/commons-lang3-3.1.jar" />
		<move file="build/META-INF/NOTICE.txt" tofile="build/META-INF/COMMONS-LANG3-NOTICE.txt" />
		
		<unjar dest="build" src="lib/commons-math-2.2.jar" />
		<move file="build/META-INF/NOTICE.txt" tofile="build/META-INF/COMMONS-MATH-NOTICE.txt" />
		
		<unjar dest="build" src="lib/jcommon-1.0.16.jar" />
		<unjar dest="build" src="lib/jfreechart-1.0.13.jar" />
		<unjar dest="build" src="lib/JMetal-3.1.jar" />
		
		<delete dir="build/META-INF/maven" />
		<delete file="build/META-INF/LICENSE.txt" />
		<delete file="build/META-INF/MANIFEST.mf" />
		<delete dir="build/templates" />
		
		<unjar dest="build" src="dist/${shortname}-${version}.jar" />
		
		<copy todir="build">
			<fileset dir="." includes="pf/" />
		</copy>
		
		<manifest mode="update" file="build/META-INF/MANIFEST.mf">
			<attribute name="Main-Class" value="org.moeaframework.analysis.diagnostics.LaunchDiagnosticTool" />
			<attribute name="Class-Path" value="." />
		</manifest>
		
		<jar destfile="dist/${shortname}-${version}-Executable.jar"
			basedir="build" manifest="build/META-INF/MANIFEST.mf" />
	</target>

	<target name="download-pisa-windows" description="Downloads all PISA selectors for Windows">
		<delete dir="build" />
		<mkdir dir="build" />

		<!-- download PISA binaries -->
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/spam/spam_win.zip" dest="build/spam_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/shv/shv_win.zip" dest="build/shv_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/sibea/sibea_binary.zip" dest="build/sibea_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/hype/hype_win.zip" dest="build/hype_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/lotz_semo/semo_win.zip" dest="build/semo_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/semo2/semo2_win.zip" dest="build/semo2_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/femo/femo_win.zip" dest="build/femo_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/spea2/spea2_win.zip" dest="build/spea2_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/nsga2/nsga2_win.zip" dest="build/nsga2_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/ecea/ecea_win.zip" dest="build/ecea_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/ibea/ibea_win.zip" dest="build/ibea_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/msops/msops_win.zip" dest="build/msops_win.zip" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/epsmoea/epsmoea_win.tar.gz" dest="build/epsmoea_win.tar.gz" />

		<!-- extract PISA binaries -->
		<unzip src="build/spam_win.zip" dest="build" />
		<unzip src="build/shv_win.zip" dest="build/shv_win/" />
		<unzip src="build/sibea_win.zip" dest="build/sibea_win/" />
		<unzip src="build/hype_win.zip" dest="build/hype_win/" />
		<unzip src="build/semo_win.zip" dest="build" />
		<unzip src="build/semo2_win.zip" dest="build" />
		<unzip src="build/femo_win.zip" dest="build" />
		<unzip src="build/spea2_win.zip" dest="build" />
		<unzip src="build/nsga2_win.zip" dest="build" />
		<unzip src="build/ecea_win.zip" dest="build" />
		<unzip src="build/ibea_win.zip" dest="build" />
		<unzip src="build/msops_win.zip" dest="build" />
		<untar src="build/epsmoea_win.tar.gz" compression="gzip" dest="build" />

		<!-- delete compressed files -->
		<delete>
			<fileset includes="*.zip,*.tar.gz" dir="build" />
		</delete>

		<!-- move PISA binaries to pisa folder -->
		<delete dir="pisa" />
		<mkdir dir="pisa" />

		<move todir="pisa">
			<fileset includes="**/*" dir="build" />
		</move>
	</target>

	<target name="download-pisa-linux" 
			description="Downloads all PISA selectors for Linux">
		<delete dir="build" />
		<mkdir dir="build" />

		<!-- download PISA binaries -->
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/spam/spam_linux_32.tar.gz" dest="build" />
		<!--<get src="http://www.tik.ee.ethz.ch/pisa/selectors/shv/shv_linux32.rar" dest="build" />-->
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/sibea/sibea_binary.zip" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/hype/hype_linux_32.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/lotz_semo/semo_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/semo2/semo2_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/femo/femo_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/spea2/spea2_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/nsga2/nsga2_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/ecea/ecea_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/ibea/ibea_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/msops/msops_linux.tar.gz" dest="build" />
		<get src="http://www.tik.ee.ethz.ch/pisa/selectors/epsmoea/epsmoea_linux.tar.gz" dest="build" />

		<!-- extract PISA binaries -->
		<untar src="build/spam_linux_32.tar.gz" compression="gzip" dest="build/spam_linux" />
		<unzip src="build/sibea_binary.zip" dest="build/sibea_linux" />
		<untar src="build/hype_linux_32.tar.gz" compression="gzip" dest="build/hype_linux" />
		<untar src="build/semo_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/semo2_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/femo_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/spea2_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/nsga2_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/ecea_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/ibea_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/msops_linux.tar.gz" compression="gzip" dest="build" />
		<untar src="build/epsmoea_linux.tar.gz" compression="gzip" dest="build" />

		<echo message="Note: SHV must be manually extracted" />

		<!--
		<exec executable="unrar" failifexecutionfails="false">
			<arg value="build/shv_linux32.rar" />
			<arg value="build/shv_linux" />
		</exec>
		-->

		<chmod perm="+x">
			<fileset dir="build" includes="**/*.sh" />
			<fileset file="build/spam_linux/spam" />
			<fileset file="build/hype_linux/hype" />
			<fileset file="build/semo_linux/semo" />
			<fileset file="build/semo2_linux/semo2" />
			<fileset file="build/femo_linux/femo" />
			<fileset file="build/spea2_linux/spea2" />
			<fileset file="build/nsga2_linux/nsga2" />
			<fileset file="build/ecea_linux/ecea" />
			<fileset file="build/ibea_linux/ibea" />
			<fileset file="build/msops_linux/msops" />
			<fileset file="build/epsmoea_linux/epsmoea" />
			<!--<fileset file="build/shv_linux/shv" />-->
		</chmod>

		<!-- delete compressed files -->
		<delete>
			<fileset includes="*.zip,*.tar.gz" dir="build" />
		</delete>

		<!-- move PISA binaries to pisa folder -->
		<delete dir="pisa" />
		<mkdir dir="pisa" />

		<move todir="pisa">
			<fileset includes="**/*" dir="build" />
		</move>
	</target>
	
	<target name="package-manual" description="Builds the user manual">
		<tstamp />
		
		<delete dir="build" />
		<mkdir dir="build" />

		<copy todir="build">
			<fileset dir="manual" />
		</copy>
		
		<replace dir="build">
			<replacefilter token="%VERSION%" value="${version}" />
			<replacefilter token="%DATE%" value="${TODAY}" />
		</replace>
		
		<exec executable="pdflatex" dir="build">
			<arg value="manual" />
		</exec>
		
		<!-- run a second time to get references and TOC correct -->
		<exec executable="pdflatex" dir="build">
			<arg value="manual" />
		</exec>
		
		<move file="build/manual.pdf" 
				tofile="dist/${shortname}-${version}-Manual.pdf" />
	</target>
	
</project>
