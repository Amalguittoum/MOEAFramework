## =======================
##  General Configuration
## =======================

## Rank-based statistical inference methods, such as the Mann-Whitney U test
## and the Wilcoxon Signed-Ranks test, approximate the test's discrete
## distribution with a continuous distribution for computing the p-value. It
## has been recommended but not often employed in practice to apply a
## continuity correction. When this flag is set to true, such tests include
## continuity correction.
#org.moeaframework.util.statistics.continuity_correction = false

## The delta applied to the nadir point of the reference set when calculating
## the hypervolume.  Having a non-zero delta is necessary to ensure extremal
## solutions contribute to the hypervolume.
#org.moeaframework.core.indicator.hypervolume_delta = 0.01

## The default hypervolume implementation may become computationally prohibitive
## on large approximation sets or at high dimensions.  Custom hypervolume
## implementations can be provided.  The following variable substitutions are
## provided:
##   {0} number of objectives
##   {1} approximation set size
##   {2} file containing the approximation set
##   {3} file containing the reference point
#org.moeaframework.core.indicator.hypervolume = hyp.exe {0} {1} {2} {3}

## In cases where the default or custom hypervolume implementations are
## computationally prohibitive, the hypervolume indicator can be optionally
## disabled.  When disabled, the hypervolume will be reported as NaN.
#org.moeaframework.core.indicator.hypervolume_enabled = false


## ==============================
##  Custom Problem Configuration
## ==============================

## The following enumerates a list of problems by name that are made available
## through the ProblemFactory.  For each problem listed, the
##   org.moeaframework.problem.NAME.class
## property must be specified with the implementation's class name, and
##   org.moeaframework.problem.NAME.referenceSet
## optionally providing the filename for the reference set.
#org.moeaframework.problem.problems = 


## ====================
##  PISA Configuration
## ====================

## The following defines the available PISA selector names.  For each algorithm
## listed, the following corresponding entries must be provided:
##   org.moeaframework.algorithm.pisa.NAME.command
##   org.moeaframework.algorithm.pisa.NAME.configuration
## where NAME is replaced with the name of the selector.
#org.moeaframework.algorithm.pisa.algorithms = FEMO, HypE, IBEA, NSGA2, SEMO2, SVH, SPEA2

## The poll rate specifies, in milliseconds, how frequently the state file is 
## checked.
#org.moeaframework.algorithm.pisa.poll = 100

## Example configuration options for the named algorithms
#org.moeaframework.algorithm.pisa.FEMO.command = ./pisa/femo_win/femo.exe
#org.moeaframework.algorithm.pisa.FEMO.configuration = ./pisa/femo_win/femo_param.txt
#org.moeaframework.algorithm.pisa.HypE.command = ./pisa/hype_win/hype.exe
#org.moeaframework.algorithm.pisa.HypE.configuration = ./pisa/hype_win/hype_param.txt
#org.moeaframework.algorithm.pisa.IBEA.command = ./pisa/ibea_win/ibea.exe
#org.moeaframework.algorithm.pisa.IBEA.configuration = ./pisa/ibea_win/ibea_param.txt
#org.moeaframework.algorithm.pisa.NSGA2.command = ./pisa/nsga2_win/nsga2.exe
#org.moeaframework.algorithm.pisa.NSGA2.configuration = ./pisa/nsga2_win/nsga2_param.txt
#org.moeaframework.algorithm.pisa.SEMO2.command = ./pisa/semo2_win/semo2.exe
#org.moeaframework.algorithm.pisa.SEMO2.configuration = ./pisa/semo2_win/semo2_param.txt
#org.moeaframework.algorithm.pisa.SVH.command = ./pisa/shv_win/shv.exe
#org.moeaframework.algorithm.pisa.SVH.configuration = ./pisa/shv_win/shv_param.txt
#org.moeaframework.algorithm.pisa.SPEA2.command = ./pisa/spea2_win/spea2.exe
#org.moeaframework.algorithm.pisa.SPEA2.configuration = ./pisa/spea2_win/spea2_param.txt


## ===============================
##  Diagnostic Tool Configuration
## ===============================

## Comma-separated list of algorithms available in the diagnostic tool.  PISA
## algorithms are automatically included.
#org.moeaframework.analysis.diagnostics.algorithms = NSGAII, GDE3, \
#    eMOEA, eNSGAII, MOEAD, Random

## Comma-separated list of problems available in the diagnostic tool.
#org.moeaframework.analysis.diagnostics.problems = \
#    DTLZ1_2, DTLZ2_2, DTLZ3_2, DTLZ4_2, DTLZ7_2, \
#    ROT_DTLZ1_2, ROT_DTLZ2_2, ROT_DTLZ3_2, ROT_DTLZ4_2, ROT_DTLZ7_2, \
#    UF1, UF2, UF3, UF4, UF5, UF6, UF7, UF8, UF9, UF10, UF11, UF12, UF13, \
#    CF1, CF2, CF3, CF4, CF5, CF6, CF7, CF8, CF9, CF10, \
#    LZ1, LZ2, LZ3, LZ4, LZ5, LZ6, LZ7, LZ8, LZ9, \
#    WFG1_2, WFG2_2, WFG3_2, WFG4_2, WFG5_2, WFG6_2, WFG7_2, WFG8_2, WFG9_2, \
#    ZDT1, ZDT2, ZDT3, ZDT4, ZDT5, ZDT6, \
#    Belegundu, Binh, Binh2, Binh3, Binh4, Fonseca, Fonseca2, Jimenez, Kita, \
#    Kursawe, Laumanns, Lis, Murata, Obayashi, OKA1, OKA2, Osyczka, Osyczka2, \
#    Poloni, Quagliarella, Rendon, Rendon2, Schaffer, Schaffer2, Srinivas, \
#    Tamaki, Tanaka, Viennet, Viennet2, Viennet3, Viennet4


## ===================
##  PBS Configuration
## ===================

## The command used for submitting jobs.  The job script is submitted by
## generating the script using org.moeaframework.util.pbs.script and feeding
## the resulting script to this command.
#org.moeaframework.util.pbs.qsub = qsub

## The format for the customized PBS script.  The following variable 
## substitutions are provided:
##   {0} job name
##   {1} number of nodes
##   {2} walltime hours
##   {3} commands
#org.moeaframework.util.pbs.script = \
#  #PBS -N {0}\r\n\
#  #PBS -l nodes={1}\r\n\
#  #PBS -l walltime={2}:00:00\r\n\
#  #PBS -o output/{0}\r\n\
#  #PBS -e error/{0}\r\n\
#  {3}

## The command used for retrieving PBS jobs for the current user.  The 
## following variable substitutions are provided:
##   {0} user id
#org.moeaframework.util.pbs.qstat = qstat -u {0}

## The command used for killing PBS jobs.  The following variable substitutions
## are provided:
##   {0} job id
#org.moeaframework.util.pbs.qdel = qdel {0}

## The regular expression for detecting if a job is queued.  This regular
## expression is applied to each output line from qstat.
#org.moeaframework.util.pbs.queued_regex = ^.* Q   -- $

## The regular expression for extracting the job id.  This regular expression
## is applied to each output line from qstat, and should contain a single
## captured group containing the job id.  This regular expression should fail
## to match any line that does not contain a valid job id.
#org.moeaframework.util.pbs.jobid_regex = (\\d+)\\..*