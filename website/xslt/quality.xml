<?xml version="1.0"?>
<!DOCTYPE some_name [ 
<!ENTITY nbsp "&#160;">
<!ENTITY copy "&#169;">
<!ENTITY epsilon "&#949;">
]>

<page>
  <title>Code Quality</title>
  <description>Overview of code quality, unit test failures, test coverage and more</description>
  <content>
<h2>Code Quality</h2>

<p>
  The MOEA Framework is an academic tool.  To meet the requirements of
  academic rigor, the developers have taken steps to ensure the correctness,
  robustness, reliability and quality of the MOEA Framework code.  This page
  documents our efforts towards maintaining high standards for code quality.
  The information reported below is for the latest release, version %VERSION%.
</p>

<div class="section">
<h3>Developer Tools</h3>

<p>
  We use a number of developer tools behind the scenes to help identify
  problematic code prior to releases.  These tools include:
</p>

<ul>
  <li>
    <a href="http://www.junit.org/">JUnit</a> - A unit testing framework
  </li>
  <li>
    <a href="http://www.eclemma.org/">EclEMMA</a> - Code coverage tool for
      Eclipse to identify code not covered by unit tests
  </li>
  <li>
    <a href="http://findbugs.sourceforge.net/">FindBugs</a> - Uses static 
      analysis to find potential bugs in code
  </li>
  <li>
    <a href="http://code.google.com/javadevtools/codepro/doc/index.html">CodePro
      Analytix</a> - For auditing code quality and metric calculation
  </li>
</ul>

<p>
  In addition, prior to every release, the library must pass all unit tests
  on popular Java implementations (Java SE 6, OpenJDK 6, OpenJDK 7) on
  Windows and Unix/Linux systems.  These measures help ensure the library
  works consistently across various environments.
</p>

</div>

<div class="section">
<h3>Code Statistics</h3>

<p>
  The following table provides an overview of the size and complexity of the
  MOEA Framework.  Note that lines of code only measures executable lines of
  code, ignoring comments and whitespace.
</p>

<table style="margin-left: 75px;">
  <tr>
    <th colspan="2">Source Statistics</th>
  </tr>
  <tr>
    <td>Lines of Source Code</td>
    <td>21,372</td>
  </tr>
  <tr>
    <td>Number of Comments</td>
    <td>2,783</td>
  </tr>
  <tr>
    <td>Number of Packages</td>
    <td>35</td>
  </tr>
  <tr>
    <td>Number of Classes</td>
    <td>368</td>
  </tr>
  <tr>
    <td>Number of Constructors</td>
    <td>417</td>
  </tr>
  <tr>
    <td>Number of Methods</td>
    <td>1,475</td>
  </tr>
  <tr>
    <td>Average Cyclomatic Complexity</td>
    <td>2.07</td>
  </tr>
  <tr>
    <th colspan="2">Test Statistics</th>
  </tr>
  <tr>
    <td>Lines of Test Code</td>
    <td>13,855</td>
  </tr>
  <tr>
    <td>Number of Unit Tests</td>
    <td>1007</td>
  </tr>
  <tr>
    <td>Number of Unit Test Errors</td>
    <td>0</td>
  </tr>
  <tr>
    <td>Number of Unit Test Failures</td>
    <td>0</td>
  </tr>
</table>

</div>

<div class="section">
<h3>Test Coverage</h3>

<p>
  Test coverage measures the percentage of code which is in some way used
  during testing.  Coverage makes no claims regarding the effectiveness of 
  the unit tests, but helps identify code which is in no way covered by any
  unit tests.  The table below shows the test coverage for each package in the
  MOEA Framework. 
</p>

<table class="coverage centered">
  <tr>
    <td style="border: none;">Legend:</td>
    <td class="bad">0 - 50 %</td>
    <td class="okay">50 - 80 %</td>
    <td class="good">80 - 100 %</td>
  </tr>
</table>
      
<table class="coverage" style="margin-left: 75px;">
  <tr>
    <th>Package</th>
    <th>Coverage</th>
    <th>Notes</th>
  </tr>
  <tr>
    <td class="package">org.moeaframework</td>
    <td class="good">82.3 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.algorithm</td>
    <td class="good">87.1 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.algorithm.jmetal</td>
    <td class="good">95.5 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.algorithm.pisa</td>
    <td class="good">85.8 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframewwork.analysis.collector</td>
    <td class="good">86.3 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.analysis.diagnostics</td>
    <td class="bad">0.0 %</td>
    <td>GUI, not covered by unit tests</td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.analysis.sensitivity</td>
    <td class="good">87.7 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core</td>
    <td class="good">92.1 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.comparator</td>
    <td class="good">100.0 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.fitness</td>
    <td class="good">100.0 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.indicator</td>
    <td class="good">81.3 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.operator</td>
    <td class="good">93.8 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.operator.binary</td>
    <td class="good">95.3 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.operator.grammar</td>
    <td class="good">100.0 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.operator.permutation</td>
    <td class="good">98.6 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.operator.real</td>
    <td class="good">95.6 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.spi</td>
    <td class="good">94.1 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.core.variable</td>
    <td class="good">97.5 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.problem</td>
    <td class="good">87.2 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.problem.CEC2009</td>
    <td class="bad">17.6 %</td>
    <td>Code from CEC 2009 authors</td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.problem.DTLZ</td>
    <td class="good">95.1 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.problem.LZ</td>
    <td class="okay">63.3 %</td>
    <td>Code from LZ authors</td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.problem.misc</td>
    <td class="good">99.4 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.problem.WFG</td>
    <td class="okay">51.1 %</td>
    <td>Code from WFG authors</td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.problem.ZDT</td>
    <td class="good">98.3 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.util</td>
    <td class="good">91.6 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.util.distributed</td>
    <td class="good">91.7 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.util.grammar</td>
    <td class="good">94.6 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.util.io</td>
    <td class="good">87.6 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.util.pbs</td>
    <td class="bad">0.0 %</td>
    <td>Manually tested</td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.util.sequence</td>
    <td class="good">92.9 %</td>
    <td></td>
  </tr>
  <tr>
    <td class="package">org.moeaframework.util.statistics</td>
    <td class="good">93.8 %</td>
    <td></td>
  </tr>
</table>

</div>
  </content>
</page>
